import hydra
from omegaconf import DictConfig
import pytorch_lightning as pl
from src.data.datamodule import ISICDataModule
from src.models.cnn_model import CNN
from src.models.timm_model import TimmModel
from src.utils.clearml_logger import ClearMLLogger
from src.utils.utils import set_seed
import torch
import os
import pandas as pd

import logging
import sys


logging.basicConfig(
    stream=sys.stderr, 
    level=logging.DEBUG, 
    format="%(asctime)s %(levelname)s: %(message)s"
)

def test(config: DictConfig,
         seed: int,
         checkpoint_path: str,
         logger: callable,
         unique_id: str):
    
    set_seed(seed)
    data_module = ISICDataModule(config.dataset)
    data_module.setup()
    
    config.dataset.seed = seed

    print(f"Testing model trained on seed: {seed}")

    if config.model.name == 'CNN':
        model = CNN.load_from_checkpoint(checkpoint_path, config=config)
    elif config.model.name in config.timm_models:
        model = TimmModel.load_from_checkpoint(checkpoint_path[0], config=config)
    else:
        raise ValueError(f"Unknown model: {config.model.name}")

    trainer = pl.Trainer(**config.trainer,
                         logger=logger,
                         deterministic=True)

    trainer.test(model, datamodule=data_module)

    # Load the summary CSV generated by the model
    #summary_df = pd.read_csv(f"{config.model.name}_{config.dataset.seed}_summary.csv")
    #return summary_df

if __name__ == "__main__":
    test()